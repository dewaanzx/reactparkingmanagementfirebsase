{"ast":null,"code":"var _jsxFileName = \"D:\\\\frontendtest_pelindo\\\\react-parking-management\\\\src\\\\components\\\\Auth\\\\AuthForm.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport classes from './AuthForm.module.css';\nimport { useAppContext } from '../../AppContext';\nimport LoadingSpinner from '../Layout/LoadingSpinner';\nimport Alert from '../Layout/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthForm = () => {\n  _s();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\n  const [alert, setAlert] = useState({\n    show: false,\n    message: '',\n    type: ''\n  });\n  const {\n    isLogin,\n    loginHandler,\n    emailHandler\n  } = useAppContext();\n  const showAlert = (show = false, type = '', message = '') => {\n    setAlert({\n      show,\n      type,\n      message\n    });\n  };\n  const submitHandler = async event => {\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    // validation\n    if (!enteredEmail.endsWith('.com') && !enteredEmail.endsWith('.net') && !enteredEmail.endsWith('.org')) {\n      showAlert(true, 'danger', 'Invalid Email');\n      return;\n    }\n    if ((enteredPassword.includes(' ') || enteredPassword.length < 8) && !isLogin) {\n      showAlert(true, 'danger', 'Password atleast 8 chars long');\n      return;\n    }\n\n    // after validation\n    let url;\n    setIsLoading(true);\n    if (isLogin) {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=BHQn_c7Bu4j_3P2LqBf7fw0iVorJNxQF67F1nKmnTCSOTXUWUlpKlNNXteKTP0tt6QT6cRa3oDMK4PyTVytf4bQ';\n    } else {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAtWBTV6j8wvd0Z_A8sBMTi_yyUddvaGU4';\n    }\n    const response = await fetch(url, {\n      method: 'POST',\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    setIsLoading(false);\n    const data = await response.json();\n    if (!response.ok) {\n      let errorMessage = 'Authentication failed!';\n      if (data && data.error && data.error.message) {\n        errorMessage = data.error.message;\n        const regex = /_/g;\n        errorMessage = errorMessage.replace(regex, ' ');\n      }\n      showAlert(true, 'danger', errorMessage);\n    } else {\n      if (!isLogin) {\n        showAlert(true, 'success', 'Successfully Signed Up');\n        setTimeout(() => {\n          history.goBack();\n        }, 2000);\n      } else {\n        showAlert(true, 'success', 'Welcome');\n        const expirationTime = new Date(new Date().getTime() + +data.expiresIn * 1000);\n        loginHandler(data.idToken, expirationTime.toISOString());\n        emailHandler(data.email);\n        history.replace('/');\n        setTimeout(() => {\n          history.go(0);\n        }, 400);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [alert.show && /*#__PURE__*/_jsxDEV(Alert, {\n      ...alert,\n      removeAlert: showAlert,\n      change: {\n        isLoading\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? 'Login' : 'Sign Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: classes.inputs,\n          type: \"email\",\n          id: \"email\",\n          ref: emailInputRef,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: classes.inputs,\n          type: \"password\",\n          id: \"password\",\n          ref: passwordInputRef,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [!isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? 'Login' : 'Create Account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 26\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthForm, \"BBc25yUFikGWoeP9GWEjloHOr6c=\", false, function () {\n  return [useHistory, useAppContext];\n});\n_c = AuthForm;\nexport default AuthForm;\nvar _c;\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["useRef","useState","useHistory","classes","useAppContext","LoadingSpinner","Alert","jsxDEV","_jsxDEV","AuthForm","_s","emailInputRef","passwordInputRef","history","isLoading","setIsLoading","alert","setAlert","show","message","type","isLogin","loginHandler","emailHandler","showAlert","submitHandler","event","preventDefault","enteredEmail","current","value","enteredPassword","endsWith","includes","length","url","response","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","data","json","ok","errorMessage","error","regex","replace","setTimeout","goBack","expirationTime","Date","getTime","expiresIn","idToken","toISOString","go","className","auth","children","removeAlert","change","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","control","htmlFor","inputs","id","ref","required","actions","_c","$RefreshReg$"],"sources":["D:/frontendtest_pelindo/react-parking-management/src/components/Auth/AuthForm.js"],"sourcesContent":["import {useRef, useState} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport classes from './AuthForm.module.css';\r\nimport {useAppContext} from '../../AppContext';\r\nimport LoadingSpinner from '../Layout/LoadingSpinner';\r\nimport Alert from '../Layout/Alert';\r\n\r\n\r\nconst AuthForm = () => {\r\n  const emailInputRef = useRef();\r\n  const passwordInputRef = useRef();\r\n  const history = useHistory();\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [alert, setAlert] = useState({show: false, message: '', type: ''});\r\n\r\n  const {isLogin, loginHandler, emailHandler} = useAppContext();\r\n\r\n  const showAlert = (show = false, type = '', message = '') => {\r\n    setAlert({\r\n      show,\r\n      type,\r\n      message\r\n    });\r\n  };\r\n\r\n  const submitHandler = async (event) => {\r\n    event.preventDefault();\r\n    const enteredEmail = emailInputRef.current.value;\r\n    const enteredPassword = passwordInputRef.current.value;\r\n\r\n    // validation\r\n    if ((!enteredEmail.endsWith('.com')) && (!enteredEmail.endsWith('.net')) && (!enteredEmail.endsWith('.org'))) {\r\n      showAlert(true, 'danger', 'Invalid Email');\r\n      return;\r\n    }\r\n    if ((enteredPassword.includes(' ') || enteredPassword.length < 8) && !isLogin) {\r\n      showAlert(true, 'danger', 'Password atleast 8 chars long');\r\n      return;\r\n    }\r\n    \r\n    // after validation\r\n    let url;\r\n    setIsLoading(true);\r\n    if (isLogin) {\r\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=BHQn_c7Bu4j_3P2LqBf7fw0iVorJNxQF67F1nKmnTCSOTXUWUlpKlNNXteKTP0tt6QT6cRa3oDMK4PyTVytf4bQ';\r\n    }\r\n    else {\r\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAtWBTV6j8wvd0Z_A8sBMTi_yyUddvaGU4';\r\n    }\r\n\r\n    const response = await fetch(\r\n      url,\r\n      {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n          email: enteredEmail,\r\n          password: enteredPassword,\r\n          returnSecureToken: true\r\n        }),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      }\r\n    );\r\n    setIsLoading(false);\r\n\r\n    const data = await response.json();\r\n\r\n    if (!response.ok) {\r\n      let errorMessage = 'Authentication failed!';\r\n\r\n      if (data && data.error && data.error.message) {\r\n        errorMessage = data.error.message;\r\n        const regex = /_/g;\r\n        errorMessage = errorMessage.replace(regex, ' ');\r\n      }\r\n      showAlert(true, 'danger', errorMessage);\r\n    }\r\n\r\n    else {\r\n      if (!isLogin) {\r\n        showAlert(true, 'success', 'Successfully Signed Up');\r\n        setTimeout(() => { history.goBack(); }, 2000);\r\n      }\r\n      else {\r\n        showAlert(true, 'success', 'Welcome');\r\n        const expirationTime = new Date(\r\n          new Date().getTime() + (+data.expiresIn * 1000)\r\n        );\r\n\r\n        loginHandler(data.idToken, expirationTime.toISOString());\r\n        emailHandler(data.email);\r\n\r\n        history.replace('/');\r\n        setTimeout(() => { history.go(0); }, 400);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className={classes.auth}>\r\n\r\n      {alert.show && <Alert {...alert} removeAlert = {showAlert} change = {{isLoading}}/>}\r\n\r\n      <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\r\n\r\n      <form onSubmit = {submitHandler}>\r\n        <div className={classes.control}>\r\n          <label htmlFor='email'>Your Email</label>\r\n          <input \r\n            className = {classes.inputs}\r\n            type='email' \r\n            id='email' \r\n            ref = {emailInputRef} \r\n            required \r\n          />\r\n        </div>\r\n\r\n        <div className={classes.control}>\r\n          <label htmlFor='password'>Your Password</label>\r\n          <input \r\n            className = {classes.inputs}\r\n            type='password' \r\n            id='password' \r\n            ref = {passwordInputRef} \r\n            required \r\n          />\r\n        </div>\r\n\r\n        <div className={classes.actions}>\r\n          {!isLoading && <button>{isLogin ? 'Login' : 'Create Account'}</button>}\r\n          {isLoading && <LoadingSpinner />}\r\n        </div>\r\n      </form>\r\n      \r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}